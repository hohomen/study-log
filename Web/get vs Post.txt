HTTP에서 클라이언트 요청은 크게 GET 방식과 POST 방식으로 나뉜다.p.121
GET은 서버에 있는 정보를 가져오려고 설계된 방식이고(하지만 GET 방식으로도 서버에 정보를 전달할 수 있다.)
POST는 클라리언트에 있는 정보를 서버에 올리려고 설계된 방식이다.

가장 큰 차이는 URL을 통해 정보가 전달되는 것. -> 데이터 크기 제한, 보안
When the method is GET, all form data is encoded into the URL, appended to the action URL as query string parameters. With POST, form data appears within the message body of the HTTP request.

GET 방식
서버에는 최대 240Byte까지 데이터를 전달할 수 있다.
Query_String 환경변수를 통해서 서버로 전달되는데 다음의 형식을 따른다.
(a query string is the part of a uniform resource locator (URL) which assigns values to specified parameters.) &은 여러 속성값을 전달할 때.
URL이 노출되기 때문에 보안에 문제가 생길 수 있다.

POST
서버에 전달할 수 있는 데이터 크기에는 제한이 없다.
URL에는 매개변수가 표시되지 않는다.

			GET		POST
History	 URL의 일부기 때문에 남는다. 		X
Bookmarked	 Can be bookmarked	X
Cached		Can be cached	Not cached

BACK button/re-submit behaviour
GET requests are re-executed but may not be re-submitted to server if the HTML is stored in the browser cache.	
POST The browser usually alerts the user that data will need to be re-submitted.

어떤 용도
GET은 서버에 있는 정보를 가져오려고 설계된 방식이고(하지만 GET 방식으로도 서버에 정보를 전달할 수 있다.)
POST는 클라리언트에 있는 정보를 서버에 올리려고 설계된 방식이다.

이 개념만 잘 생각하고 있으면 상황에 따라서 어느정도 선택을 할 수 있습니다.(물론 그래도 좀 고민되는 예외상황들은 있게 마련이죠.) 좀 자세히 설명하면 GET은 Select적인 성향을 가지고 있습니다. GET은 서버에서 어떤 데이터를 가져와서 보여준다거나 하는 용도이지 서버의 값이나 상태등을 바꾸지 않습니다. 게시판의 리스트라던지 글보기 기능 같은 것이 이에 해당하죠.(방문자의 로그를 남긴다거나 글읽은 횟수를 올려준다거나 하는건 예외입니다.) 반면에 POST는 서버의 값이나 상태를 바꾸기 위해서 사용합니다. 글쓰기를 하면 글의 내용이 디비에 저장이 되고 수정을 하면 디비값이 수정이 되죠. 이럴 경우에 POST를 사용합니다. 

그리고 가져오는 곳에 GET을 사용해야 하는 이유가 하나 더 있습니다. 웹의 핵심이라고 할 수 있는 Link문제입니다. 