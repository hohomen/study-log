자바 프로그램이 동작하는데 
프로그램상으로 들어오는 모든 값들을 Input 데이터라고 하고
(그 대상은 파일, 네트워크, 콘솔 어떤 것이든 될 수 있다.)
프로그램 밖으로 나가는 모든 데이터들을 Output 데이터라고 한다.

IO는 입력과 출력에 관련된 클래스와 인터페이스들

자바 IO는 크게
1.byte단위 입출력과 
2.문자Char 단위 입출력클래스로 나뉩니다.

-byte단위 입출력클래스는 모두 InputStream과 OutputStream이라는 {$추상$}클래스를 상속받아 만들어집니다.
-문자(char)단위 입출력클래스는 모두 Reader와 Writer라는 {$추상$}클래스를 상속받아 만들어집니다.
4가지 {$추상$}클래스(InputStream,OutputStreamReader,Reader,Writer)를 받아들이는 생성자(메소드)가 있다면, 다양한 입출력방법을 제공하는 클래스입니다.

(장식대상 클래스)
4가지 클래스를 받아들이는 생성자(메소드)가 없다면, {$어디로부터$} 입력받을 것인지, {$어디에 쓸것인지$}를 나타내는 클래스입니다.
파일로 부터 입력받고 쓰기 위한 클래스 : FileInputStream, FileOutputStream, FileReader, FileWriter
배열로 부터 입력받고 쓰기 위한 클래스 : ByteArrayInputStream, ByteArrayOutputStream, CharReader, CharWriter
해당 클래스들은 어디로부터, 어디에라는 대상을 지정할 수 있는 IO클래스입니다. 이런 클래스를 장식대상 클래스라고 합니다.

(장식하는 클래스 : 받아온 데이터를 다룬다.)
DataInputStream, DataOutputStream같은 클래스를 보면 다양한 데이터 형을 입력받고 출력합니다.
PrintWriter는 다양하게 한줄 출력하는 pintln()메소드를 가지고있습니다.
BufferedReader는 한줄 입력받는 readLine()메소드를 가집니다.
이런 클래스들은 다양한 방식으로 입력하고, 출력하는 기능을 제공합니다. 이런 클래스를 장식하는 클래스라고 합니다.

장식이라는 용어를 사용하는 이유는 JAVA IO가 Decorator Pattern으로 구현되었기 때문이다.
하나의 클래스를 마치 장식하는 것처럼 생성자에서 감싸서 새로운 기능을 계속 추가할 수 있도록 클래스를 만드는 방식.

