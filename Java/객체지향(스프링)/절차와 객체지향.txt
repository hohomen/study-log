(자바 객체지향)
기존의 구조적 프로그래밍 언어에서 가장 중요한 것은 "함수"였다.
함수는 코드를 논리적인 단위로 구분하고 분할해서 정복하자는 것이다. 즉 D&C하자는 것이다.
함수의 목적을 배울 때 중복 제거를 1순위, 논리의 분할을 2순위쯤으로 배웠을 텐데, 역사적으로는 논리적인 단위의 블록을 함수라고 한다.
지침 중에는 goto문을 쓰지 말 것과 공유 사용 시 문제가 발생하기 쉬운 전역 변수보다는 지역 변수를 쓰라는 것도 있다.

(소프트웨어 공학)
절차적 프로그래밍
헤더파일 안에 데이터 선언하고 함수 선언
중요한 데이터를 글로벌에서 같이 처리
중요한건 함수와 프로세스. 처리를 어떻게 할 것인지
디자인, 구조적 문제가 생겨서 객체지향이 탄생
모듈이 추가되거나 변경되면 영향을 너무 많이 주고 받는다. 유지보수에 어려움.


객체지향과 절차지향의 차이
객체지향이 굉장히 모듈화 되어있다고 말함.
절차지향은 굉장히 장황하게 된다.
협업으로 인해
데이터에 대한 예외처리가 엄청많아지게 된다.
if, switch등등의 것을 많이 사용.

구조체(struct):여러가지 자료는 모아 놓은 것.
클래스: 객체들을 정의한 템플릿
데이터와 오퍼레이션이 묶여져 있다.

연관을 맺을 때 방향성 중요.
