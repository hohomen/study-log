스프링 입문을 위한 자바 객체지향의 원리와 이해

기계어 : 개발자를 사랑하기에는 너무 초창기 기술이었다.

어셈블리어 : 인간의 언어로 프로그램 작성이 가능하게 해줬다.

C언어 하나의 소스로 이기종 간에 이식성을 확보(개발자 사랑을 실현- 어셈블리는 1:1)

C++ 객체지향개념을 도입함으로써 개방자 사랑을 실천.

자바(진정한 객체 지향 언어, C++은 객체 없는 프로그래밍도 가능하다.)

자바,C#으로 넘어오면서 인간을 사랑한 방법은 가상머신(Virtual Machine)이다.
더이상 다른 운영체제를 위해 소스를 변경하지 않아도 된다.(C언어의 short, long타입은 그 잔재)
가상의 컴퓨터를 물리적 컴퓨터의 메모리 안에 하나 더 구축하는 것이다.
더 많은 물리적 CPU자원과 메모리를 소비한다.
초기에는 느려서 쓸 수 없다는 평을 받았지만 
최적화된 알고리즘으로 개발된 api와 하드웨어의 발전으로 성장.

스프링 프레임워크
거대함 속의 단순함과 완벽함, 그리고 유연함.
IoC/Di, AOP, PSA라고 하는 객체 지향의 베스트 프랙티스만으로 아무리 거대한 프로그램이라도 쉽게 구현할 수 있음을 보여준 프레임워크다.
아주 작고 작은 끝이 이 우주의 모든 물질을 구성하며 그 성질 또한 지배한다는 끈 이론.